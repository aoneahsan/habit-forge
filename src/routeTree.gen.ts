/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as ProtectedRouteImport } from './routes/_protected'
import { Route as AuthRouteImport } from './routes/_auth'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ProtectedSettingsRouteImport } from './routes/_protected/settings'
import { Route as ProtectedHelpRouteImport } from './routes/_protected/help'
import { Route as ProtectedHabitsRouteImport } from './routes/_protected/habits'
import { Route as ProtectedDashboardRouteImport } from './routes/_protected/dashboard'
import { Route as ProtectedCommunityRouteImport } from './routes/_protected/community'
import { Route as ProtectedAnalyticsRouteImport } from './routes/_protected/analytics'
import { Route as ProtectedAchievementsRouteImport } from './routes/_protected/achievements'
import { Route as AuthSignupRouteImport } from './routes/_auth/signup'
import { Route as AuthSigninRouteImport } from './routes/_auth/signin'
import { Route as AuthForgotPasswordRouteImport } from './routes/_auth/forgot-password'
import { Route as ProtectedHabitsNewRouteImport } from './routes/_protected/habits/new'
import { Route as ProtectedHabitsHabitIdEditRouteImport } from './routes/_protected/habits/$habitId.edit'

const ProtectedRoute = ProtectedRouteImport.update({
  id: '/_protected',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthRoute = AuthRouteImport.update({
  id: '/_auth',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProtectedSettingsRoute = ProtectedSettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedHelpRoute = ProtectedHelpRouteImport.update({
  id: '/help',
  path: '/help',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedHabitsRoute = ProtectedHabitsRouteImport.update({
  id: '/habits',
  path: '/habits',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedDashboardRoute = ProtectedDashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedCommunityRoute = ProtectedCommunityRouteImport.update({
  id: '/community',
  path: '/community',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedAnalyticsRoute = ProtectedAnalyticsRouteImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => ProtectedRoute,
} as any)
const ProtectedAchievementsRoute = ProtectedAchievementsRouteImport.update({
  id: '/achievements',
  path: '/achievements',
  getParentRoute: () => ProtectedRoute,
} as any)
const AuthSignupRoute = AuthSignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => AuthRoute,
} as any)
const AuthSigninRoute = AuthSigninRouteImport.update({
  id: '/signin',
  path: '/signin',
  getParentRoute: () => AuthRoute,
} as any)
const AuthForgotPasswordRoute = AuthForgotPasswordRouteImport.update({
  id: '/forgot-password',
  path: '/forgot-password',
  getParentRoute: () => AuthRoute,
} as any)
const ProtectedHabitsNewRoute = ProtectedHabitsNewRouteImport.update({
  id: '/new',
  path: '/new',
  getParentRoute: () => ProtectedHabitsRoute,
} as any)
const ProtectedHabitsHabitIdEditRoute =
  ProtectedHabitsHabitIdEditRouteImport.update({
    id: '/$habitId/edit',
    path: '/$habitId/edit',
    getParentRoute: () => ProtectedHabitsRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/achievements': typeof ProtectedAchievementsRoute
  '/analytics': typeof ProtectedAnalyticsRoute
  '/community': typeof ProtectedCommunityRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/habits': typeof ProtectedHabitsRouteWithChildren
  '/help': typeof ProtectedHelpRoute
  '/settings': typeof ProtectedSettingsRoute
  '/habits/new': typeof ProtectedHabitsNewRoute
  '/habits/$habitId/edit': typeof ProtectedHabitsHabitIdEditRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/forgot-password': typeof AuthForgotPasswordRoute
  '/signin': typeof AuthSigninRoute
  '/signup': typeof AuthSignupRoute
  '/achievements': typeof ProtectedAchievementsRoute
  '/analytics': typeof ProtectedAnalyticsRoute
  '/community': typeof ProtectedCommunityRoute
  '/dashboard': typeof ProtectedDashboardRoute
  '/habits': typeof ProtectedHabitsRouteWithChildren
  '/help': typeof ProtectedHelpRoute
  '/settings': typeof ProtectedSettingsRoute
  '/habits/new': typeof ProtectedHabitsNewRoute
  '/habits/$habitId/edit': typeof ProtectedHabitsHabitIdEditRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_protected': typeof ProtectedRouteWithChildren
  '/_auth/forgot-password': typeof AuthForgotPasswordRoute
  '/_auth/signin': typeof AuthSigninRoute
  '/_auth/signup': typeof AuthSignupRoute
  '/_protected/achievements': typeof ProtectedAchievementsRoute
  '/_protected/analytics': typeof ProtectedAnalyticsRoute
  '/_protected/community': typeof ProtectedCommunityRoute
  '/_protected/dashboard': typeof ProtectedDashboardRoute
  '/_protected/habits': typeof ProtectedHabitsRouteWithChildren
  '/_protected/help': typeof ProtectedHelpRoute
  '/_protected/settings': typeof ProtectedSettingsRoute
  '/_protected/habits/new': typeof ProtectedHabitsNewRoute
  '/_protected/habits/$habitId/edit': typeof ProtectedHabitsHabitIdEditRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/forgot-password'
    | '/signin'
    | '/signup'
    | '/achievements'
    | '/analytics'
    | '/community'
    | '/dashboard'
    | '/habits'
    | '/help'
    | '/settings'
    | '/habits/new'
    | '/habits/$habitId/edit'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/forgot-password'
    | '/signin'
    | '/signup'
    | '/achievements'
    | '/analytics'
    | '/community'
    | '/dashboard'
    | '/habits'
    | '/help'
    | '/settings'
    | '/habits/new'
    | '/habits/$habitId/edit'
  id:
    | '__root__'
    | '/'
    | '/_auth'
    | '/_protected'
    | '/_auth/forgot-password'
    | '/_auth/signin'
    | '/_auth/signup'
    | '/_protected/achievements'
    | '/_protected/analytics'
    | '/_protected/community'
    | '/_protected/dashboard'
    | '/_protected/habits'
    | '/_protected/help'
    | '/_protected/settings'
    | '/_protected/habits/new'
    | '/_protected/habits/$habitId/edit'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AuthRoute: typeof AuthRouteWithChildren
  ProtectedRoute: typeof ProtectedRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_protected': {
      id: '/_protected'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof ProtectedRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_protected/settings': {
      id: '/_protected/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof ProtectedSettingsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/help': {
      id: '/_protected/help'
      path: '/help'
      fullPath: '/help'
      preLoaderRoute: typeof ProtectedHelpRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/habits': {
      id: '/_protected/habits'
      path: '/habits'
      fullPath: '/habits'
      preLoaderRoute: typeof ProtectedHabitsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/dashboard': {
      id: '/_protected/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof ProtectedDashboardRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/community': {
      id: '/_protected/community'
      path: '/community'
      fullPath: '/community'
      preLoaderRoute: typeof ProtectedCommunityRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/analytics': {
      id: '/_protected/analytics'
      path: '/analytics'
      fullPath: '/analytics'
      preLoaderRoute: typeof ProtectedAnalyticsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_protected/achievements': {
      id: '/_protected/achievements'
      path: '/achievements'
      fullPath: '/achievements'
      preLoaderRoute: typeof ProtectedAchievementsRouteImport
      parentRoute: typeof ProtectedRoute
    }
    '/_auth/signup': {
      id: '/_auth/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof AuthSignupRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/signin': {
      id: '/_auth/signin'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof AuthSigninRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_auth/forgot-password': {
      id: '/_auth/forgot-password'
      path: '/forgot-password'
      fullPath: '/forgot-password'
      preLoaderRoute: typeof AuthForgotPasswordRouteImport
      parentRoute: typeof AuthRoute
    }
    '/_protected/habits/new': {
      id: '/_protected/habits/new'
      path: '/new'
      fullPath: '/habits/new'
      preLoaderRoute: typeof ProtectedHabitsNewRouteImport
      parentRoute: typeof ProtectedHabitsRoute
    }
    '/_protected/habits/$habitId/edit': {
      id: '/_protected/habits/$habitId/edit'
      path: '/$habitId/edit'
      fullPath: '/habits/$habitId/edit'
      preLoaderRoute: typeof ProtectedHabitsHabitIdEditRouteImport
      parentRoute: typeof ProtectedHabitsRoute
    }
  }
}

interface AuthRouteChildren {
  AuthForgotPasswordRoute: typeof AuthForgotPasswordRoute
  AuthSigninRoute: typeof AuthSigninRoute
  AuthSignupRoute: typeof AuthSignupRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthForgotPasswordRoute: AuthForgotPasswordRoute,
  AuthSigninRoute: AuthSigninRoute,
  AuthSignupRoute: AuthSignupRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface ProtectedHabitsRouteChildren {
  ProtectedHabitsNewRoute: typeof ProtectedHabitsNewRoute
  ProtectedHabitsHabitIdEditRoute: typeof ProtectedHabitsHabitIdEditRoute
}

const ProtectedHabitsRouteChildren: ProtectedHabitsRouteChildren = {
  ProtectedHabitsNewRoute: ProtectedHabitsNewRoute,
  ProtectedHabitsHabitIdEditRoute: ProtectedHabitsHabitIdEditRoute,
}

const ProtectedHabitsRouteWithChildren = ProtectedHabitsRoute._addFileChildren(
  ProtectedHabitsRouteChildren,
)

interface ProtectedRouteChildren {
  ProtectedAchievementsRoute: typeof ProtectedAchievementsRoute
  ProtectedAnalyticsRoute: typeof ProtectedAnalyticsRoute
  ProtectedCommunityRoute: typeof ProtectedCommunityRoute
  ProtectedDashboardRoute: typeof ProtectedDashboardRoute
  ProtectedHabitsRoute: typeof ProtectedHabitsRouteWithChildren
  ProtectedHelpRoute: typeof ProtectedHelpRoute
  ProtectedSettingsRoute: typeof ProtectedSettingsRoute
}

const ProtectedRouteChildren: ProtectedRouteChildren = {
  ProtectedAchievementsRoute: ProtectedAchievementsRoute,
  ProtectedAnalyticsRoute: ProtectedAnalyticsRoute,
  ProtectedCommunityRoute: ProtectedCommunityRoute,
  ProtectedDashboardRoute: ProtectedDashboardRoute,
  ProtectedHabitsRoute: ProtectedHabitsRouteWithChildren,
  ProtectedHelpRoute: ProtectedHelpRoute,
  ProtectedSettingsRoute: ProtectedSettingsRoute,
}

const ProtectedRouteWithChildren = ProtectedRoute._addFileChildren(
  ProtectedRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AuthRoute: AuthRouteWithChildren,
  ProtectedRoute: ProtectedRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
